{"version":3,"sources":["webpack:///./src/components/PostCard.js","webpack:///./src/components/PostCard-List.js","webpack:///./src/components/templates/postcard-list-template.js"],"names":["Card","styled","div","PostCard","data","imageUrl","frontmatter","path","title","date","hero","excerpt","console","log","to","className","fluid","childImageSharp","alt","src","List","getImageUrl","images","min","max","imageNode","length","Math","floor","random","node","publicURL","largeImageURL","PostCardList","posts","map","item","index","url","key","query","PostCardListTemplate","allMarkdownRemark","edges","gifs","allFile","pngs","allPixabayPhoto"],"mappings":"07EAKA,IAAMA,EAAOC,IAAOC,IAAV,KA2HKC,EAnBE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EACHD,EAAKE,YAAjCC,EAD+B,EAC/BA,KAAMC,EADyB,EACzBA,MAAOC,EADkB,EAClBA,KAAMC,EADY,EACZA,KACnBC,EAAYP,EAAZO,QAGR,OAFAC,QAAQC,IAAIR,GAGV,kBAACL,EAAD,KACE,kBAAC,OAAD,CAAMc,GAAIP,GACR,yBAAKQ,UAAU,qBAAqBL,EAAO,kBAAC,IAAD,CAAOM,MAAON,EAAKO,gBAAgBD,MAAOE,IAAI,eAAkB,yBAAKH,UAAU,SAASI,IAAKd,EAAUa,IAAI,eACtJ,yBAAKH,UAAU,oBACb,uBAAGA,UAAU,SAASP,GACtB,uBAAGO,UAAU,QAAQN,GACrB,uBAAGM,UAAU,QAAQJ,O,6RCrH/B,IAAMS,EAAOnB,IAAOC,IAAV,KAeJmB,EAAc,SAAAC,GAClB,IALoBC,EAAKC,EAMnBC,EAAYH,GANEC,EAKW,EALNC,EAKSF,EAAOI,OAJlCC,KAAKC,MAAMD,KAAKE,UAAYL,EAAMD,IAAQA,IAKbO,KAEpC,YAAsC,IAAxBL,EAAUM,UAA4BN,EAAUO,cAAgBP,EAAUM,WAe3EE,EAZM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOZ,EAAa,EAAbA,OAC7B,OACE,kBAACF,EAAD,KACGc,EAAMC,KAAI,SAACC,EAAMC,GAChB,IAAMC,EAAMjB,EAAYC,GAExB,OAAO,kBAAC,EAAD,CAAUiB,IAAKF,EAAOjC,KAAMgC,EAAKN,KAAMzB,SAAUiC,S,2XC1BzD,IAAME,EAAK,aAsDHC,UAbc,SAAC,GAAc,IAAZrC,EAAW,EAAXA,KACxB8B,EAAQ9B,EAAKsC,kBAAkBC,MAC/BC,EAAOxC,EAAKyC,QAAQF,MACpBG,EAAO1C,EAAK2C,gBAAgBJ,MAC5BrB,EAAM,YAAOsB,GAAP,EAAgBE,IAE5B,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAcZ,MAAOA,EAAOZ,OAAQA","file":"component---src-components-templates-postcard-list-template-js-061f1e63cca58e11c55b.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nconst Card = styled.div`\n  line-height: 1.3;\n  border: 1px solid #e0e0e0;\n  overflow: hidden;\n  border-radius: 10px;\n  box-sizing: border-box;\n  position: relative;\n  width: calc((100% - 20px * 5) / 4);\n  margin-left: 20px;\n  margin-top: 40px;\n  @media screen and (max-width: 1600px) {\n    width: calc((100% - 20px * 4) / 3);\n    margin-left: 20px;\n  }\n  @media screen and (max-width: 1300px) {\n    width: calc((100% - 20px * 3) / 2);\n    margin-left: 20px;\n  }\n  @media screen and (max-width: 700px) {\n    width: calc(100% - 3% * 2);\n    margin-left: 3%;\n  }\n  &:hover {\n    .thumbnail-wrapper:before {\n      content: '';\n      background: black;\n      opacity: 0.2;\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 999;\n    }\n  }\n  a {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n  }\n  .thumbnail-wrapper {\n    width: 100%;\n    height: 0;\n    padding-bottom: 56.25%;\n    position: relative;\n    display: block;\n  }\n  .contents-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 15px 20px;\n    box-sizing: border-box;\n    flex: 1;\n  }\n  .thumbnail {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: block;\n    object-fit: cover;\n    border-top-right-radius: 8px;\n    border-top-left-radius: 8px;\n  }\n  .title {\n    font-size: 2rem;\n    color: #222;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n  .desc {\n    font-size: 16px;\n    height: 72px;\n    color: #888;\n    line-height: 1.5;\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n  .date {\n    color: #777;\n    opacity: 0.5;\n    font-size: 12px;\n    text-align: right;\n    margin: 3% 0 5%;\n    word-break: break-all;\n  }\n  .banner {\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst PostCard = ({ data, imageUrl }) => {\n  const { path, title, date, hero } = data.frontmatter;\n  const { excerpt } = data;\n  console.log(imageUrl);\n\n  return (\n    <Card>\n      <Link to={path}>\n        <div className=\"thumbnail-wrapper\">{hero ? <Image fluid={hero.childImageSharp.fluid} alt=\"마크다운 카드 배너\" /> : <img className=\"banner\" src={imageUrl} alt=\"포스트 기본 배너\" />}</div>\n        <div className=\"contents-wrapper\">\n          <p className=\"title\">{title}</p>\n          <p className=\"date\">{date}</p>\n          <p className=\"desc\">{excerpt}</p>\n        </div>\n      </Link>\n    </Card>\n  );\n};\n\nexport default PostCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\n\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  padding: 50px 0;\n  width: 100%;\n  margin-top: -40px;\n  @media screen and (max-width: 1500px) {\n  }\n`;\n\nconst getRandomInt = (min, max) => {\n  return Math.floor(Math.random() * (max - min)) + min; // 최소값 포함 최대값 미포함\n};\n\nconst getImageUrl = images => {\n  const randomInt = getRandomInt(0, images.length);\n  const imageNode = images[randomInt].node;\n\n  return typeof imageNode.publicURL === 'undefined' ? imageNode.largeImageURL : imageNode.publicURL;\n};\n\nconst PostCardList = ({ posts, images }) => {\n  return (\n    <List>\n      {posts.map((item, index) => {\n        const url = getImageUrl(images);\n\n        return <PostCard key={index} data={item.node} imageUrl={url} />;\n      })}\n    </List>\n  );\n};\n\nexport default PostCardList;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport PostCardList from '../PostCard-List';\n\n// 이 템플릿으로 페이지를 찍어내는거니까 여기선 페이지 쿼리 사용 가능함.\nexport const query = graphql`\n  query getPosts($postsGlob: String) {\n    allMarkdownRemark(filter: { frontmatter: { path: { glob: $postsGlob } } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            date\n            hero {\n              childImageSharp {\n                fluid(maxWidth: 1080) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          excerpt(truncate: true, pruneLength: 200)\n        }\n      }\n    }\n    allFile(filter: { relativePath: { glob: \"banners/*\" } }) {\n      edges {\n        node {\n          publicURL\n        }\n      }\n    }\n    allPixabayPhoto(limit: 10) {\n      edges {\n        node {\n          largeImageURL\n          pageURL\n          tags\n          user\n        }\n      }\n    }\n  }\n`;\n\nconst PostCardListTemplate = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const gifs = data.allFile.edges;\n  const pngs = data.allPixabayPhoto.edges;\n  const images = [...gifs, ...pngs];\n\n  return (\n    <Layout>\n      <PostCardList posts={posts} images={images} />\n    </Layout>\n  );\n};\n\nexport default PostCardListTemplate;\n"],"sourceRoot":""}