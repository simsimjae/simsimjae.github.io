{"componentChunkName":"component---src-components-templates-page-template-js","path":"/posts/react/2","result":{"data":{"markdownRemark":{"html":"<p>두번째 리액트 게시글</p>\n<h1>h1</h1>\n<h2>h2</h2>\n<h3>h3</h3>\n<blockquote>\n<p>this is a blockquote</p>\n</blockquote>\n<ol>\n<li>first</li>\n<li>second</li>\n<li>third</li>\n<li>\n<p>hi</p>\n<ul>\n<li>hi</li>\n<li>hihi</li>\n</ul>\n</li>\n</ol>\n<pre><code class=\"language-javascript\">var lines = ['2016-09-15 01:00:04.001 2.0s', '2016-09-15 01:00:07.000 2s'];\n\nvar seconds = [60 * 60 * 24 * 30 * 12, 60 * 60 * 24 * 30, 60 * 60 * 24, 60 * 60];\n\nvar startend;\n\nfunction solve(line, index0) {\n  var sec = 0;\n  var arr = line.split(' ');\n  arr.map((item, index) => {\n    // 2016-09-15 20:59:57.421 0.351s\n    if (index === 0) {\n      // 2019-06-15\n      var subarr = item.split('-');\n      subarr.map((item2, index2) => {\n        sec += seconds[index2] * item2;\n      });\n    } else if (index === 1) {\n      // 20:59:57.421\n      var subarr = item.split(':');\n      subarr.map((item2, index2) => {\n        // 20h 59m 57.421s,\n        if (index2 == 2) {\n          sec += parseFloat(item2);\n          return;\n        }\n        sec += seconds[index2 + 2] * item2;\n      });\n    } else if (index === 2) {\n      // 0.351s\n      var duration = parseFloat(item.substr(0, item.length - 1), 10); // 0.3\n      var startTime = parseFloat((sec - duration + 0.001).toFixed(3));\n      startend[index0].push(startTime);\n      startend[index0].push(sec);\n      console.log(startend);\n    }\n  });\n}\n\nfunction solution(lines) {\n  startend = Array(lines.length)\n    .fill(null)\n    .map(() => Array());\n  lines.map((line, index) => {\n    solve(line, index);\n  });\n  startend.sort((a, b) => {\n    return a[0] - b[0];\n  });\n  var startSec = startend[0][0];\n  var endSec = startend[startend.length - 1][1];\n\n  var count, startTime, endTime, windowStartTime, windowEndTime, maxCount;\n  startend.map((item, index) => {\n    for (let j = 0; j &#x3C;= 1; j++) {\n      // 각 라인에 대하여\n      maxCount = 0;\n      count = 0;\n      if (j == 0) {\n        // 스타트 기점으로 윈도우 만들기\n        count = 0;\n        windowStartTime = startTime;\n        windowEndTime = startTime + 0.999;\n      } else if (j == 1) {\n        // 엔드 시점으로 윈도우 만들기\n        windowStartTime = endTime;\n        windowEndTime = endTime + 0.999;\n      }\n      for (let i = 0; i &#x3C; startend.length; i++) {\n        // 다른 모든 라인에 슬라이딩 윈도우가 포함되는지 검사.\n        startTime = startend[i][0];\n        endTime = startend[i][1];\n        if (windowStartTime >= startTime || windowEndTime &#x3C;= endTime) {\n          // 여기 조건문이 틀렸음.\n          console.log(startTime, endTime, windowStartTime, windowEndTime);\n          count++;\n        }\n        console.log('\\n');\n      }\n      maxCount = Math.max(count, maxCount);\n    }\n  });\n\n  console.log(maxCount);\n  return maxCount;\n}\n\nsolution(lines);\n</code></pre>\n<hr>\n<p><a href=\"https://www.naver.com\">https://www.naver.com</a></p>\n<p><strong>강조</strong></p>","frontmatter":{"date":"2019-12-16","path":"/posts/react/2","title":"My first blog post"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}